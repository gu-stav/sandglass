// Generated by CoffeeScript 1.7.1
(function() {
  var Sandglass, Sequelize, bodyParser, cookieParser, express, _;

  _ = require('lodash');

  bodyParser = require('body-parser');

  cookieParser = require('cookie-parser');

  express = require('express');

  Sequelize = require('sequelize');

  Sandglass = (function() {
    function Sandglass(options) {
      this.defaults = {
        headless: false,
        server: {
          port: 3000
        },
        frontend: {
          cookie: {
            name: 'auth',
            options: {
              expires: new Date(Date.now() + 900000),
              httpOnly: true
            }
          }
        },
        db: {
          name: '',
          username: 'root',
          password: '',
          host: 'localhost',
          options: {
            dialect: 'sqlite',
            storage: 'sandglass.sqlite'
          }
        }
      };
      this.app = express();
      this.app.options = this.options = _.defaults(this.defaults, options);
    }

    Sandglass.prototype.setupDatabase = function() {
      return this.app.db = new Sequelize(this.options.db.name, this.options.db.username, this.options.db.password, this.options.db.options);
    };

    Sandglass.prototype.setupViews = function() {
      this.app.set('view engine', 'jade');
      this.app.set('views', __dirname + '/views');
      this.app.use(bodyParser.urlencoded({
        extended: true
      }));
      return this.mount(require('./routes/index')(this.app));
    };

    Sandglass.prototype.setupAPI = function() {
      this.app.API_VERSION = '0.1';
      this.mount(require('./routes/api/index')(this.app));
      this.app.use(bodyParser.json());
      return this.app.error = function(res, err) {
        console.log(err);
        return res.send(err);
      };
    };

    Sandglass.prototype.setupModels = function() {
      var model, models, _i, _len;
      models = require('./models/index')(this.app.db);
      for (_i = 0, _len = models.length; _i < _len; _i++) {
        model = models[_i];
        if ((model.associate != null)) {
          model.associate(models);
        }
      }
      return this.app.models = models;
    };

    Sandglass.prototype.mount = function(routes) {
      var router, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = routes.length; _i < _len; _i++) {
        router = routes[_i];
        _results.push(this.app.use(router));
      }
      return _results;
    };

    Sandglass.prototype.start = function() {
      this.setupDatabase();
      this.setupModels();
      this.app.use(cookieParser());
      if (!this.options.headless) {
        this.setupViews();
      }
      this.setupAPI();
      return this.app.db.sync().then((function(_this) {
        return function() {
          return _this.app.listen(_this.options.server.port);
        };
      })(this));
    };

    return Sandglass;

  })();

  module.exports = Sandglass;

}).call(this);
